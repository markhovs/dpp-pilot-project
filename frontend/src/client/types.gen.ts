// This file is auto-generated by @hey-api/openapi-ts

export type AASAssetCreateFromTemplatesRequest = {
  template_ids: Array<string>
  asset_data?: {
    [key: string]: unknown
  } | null
}

export type AASAssetMetadataUpdate = {
  global_asset_id?: string | null
  description?: string | null
  display_name?: string | null
}

export type AASAttachSubmodelsRequest = {
  template_ids: Array<string>
}

/**
 * For updating property values in a submodel (the service reads `new_data`).
 */
export type AASSubmodelDataUpdate = {
  new_data: {
    [key: string]: unknown
  }
}

export type Body_login_login_access_token = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

export type CompleteDPP = {
  id: string
  generated_at: string
  format: string
  sections: {
    [key: string]: DPPSection
  }
  metadata?: {
    [key: string]: unknown
  } | null
}

export type DPPSection = {
  title: string
  data: {
    [key: string]: unknown
  }
  metadata?: {
    [key: string]: unknown
  } | null
}

export type DPPSectionInfo = {
  id: string
  title: string
  status: string
  description?: string | null
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

export type Message = {
  message: string
}

export type NewPassword = {
  token: string
  new_password: string
}

export type PrivateUserCreate = {
  email: string
  password: string
  full_name: string
  is_verified?: boolean
}

export type Token = {
  access_token: string
  token_type?: string
}

export type UpdatePassword = {
  current_password: string
  new_password: string
}

export type UserCreate = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password: string
}

export type UserPublic = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  id: string
}

export type UserRegister = {
  email: string
  password: string
  full_name?: string | null
}

export type UsersPublic = {
  data: Array<UserPublic>
  count: number
}

export type UserUpdate = {
  email?: string | null
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password?: string | null
}

export type UserUpdateMe = {
  full_name?: string | null
  email?: string | null
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type AasListTemplatesResponse = unknown

export type AasListAllAasResponse = Array<{
  [key: string]: unknown
}>

export type AasCreateAasData = {
  requestBody: AASAssetCreateFromTemplatesRequest
}

export type AasCreateAasResponse = {
  [key: string]: unknown
}

export type AasUpdateAasMetadataData = {
  aasId: string
  requestBody: AASAssetMetadataUpdate
}

export type AasUpdateAasMetadataResponse = {
  [key: string]: unknown
}

export type AasAttachSubmodelsData = {
  aasId: string
  requestBody: AASAttachSubmodelsRequest
}

export type AasAttachSubmodelsResponse = {
  [key: string]: unknown
}

export type AasRemoveSubmodelData = {
  aasId: string
  submodelId: string
}

export type AasRemoveSubmodelResponse = {
  [key: string]: unknown
}

export type AasUpdateSubmodelDataData = {
  aasId: string
  requestBody: AASSubmodelDataUpdate
  submodelId: string
}

export type AasUpdateSubmodelDataResponse = {
  [key: string]: unknown
}

export type AasDeleteAasData = {
  aasId: string
}

export type AasDeleteAasResponse = {
  [key: string]: unknown
}

export type AasGetAasData = {
  aasId: string
}

export type AasGetAasResponse = unknown

export type DppListDppSectionsData = {
  /**
   * ID of the AAS to generate DPP for
   */
  aasId: string
  /**
   * Filter sections by status (available, incomplete)
   */
  statusFilter?: string | null
}

export type DppListDppSectionsResponse = Array<DPPSectionInfo>

export type DppGetDppSectionData = {
  /**
   * ID of the AAS
   */
  aasId: string
  /**
   * ID of the section to retrieve
   */
  sectionId: string
}

export type DppGetDppSectionResponse = DPPSection

export type DppDownloadCompleteDppData = {
  /**
   * ID of the AAS to generate DPP for
   */
  aasId: string
  /**
   * Whether to include raw data in the output
   */
  includeRaw?: boolean
}

export type DppDownloadCompleteDppResponse = CompleteDPP

export type LoginLoginAccessTokenData = {
  formData: Body_login_login_access_token
}

export type LoginLoginAccessTokenResponse = Token

export type LoginTestTokenResponse = UserPublic

export type LoginRecoverPasswordData = {
  email: string
}

export type LoginRecoverPasswordResponse = Message

export type LoginResetPasswordData = {
  requestBody: NewPassword
}

export type LoginResetPasswordResponse = Message

export type LoginRecoverPasswordHtmlContentData = {
  email: string
}

export type LoginRecoverPasswordHtmlContentResponse = string

export type PrivateCreateUserData = {
  requestBody: PrivateUserCreate
}

export type PrivateCreateUserResponse = UserPublic

export type UsersReadUsersData = {
  limit?: number
  skip?: number
}

export type UsersReadUsersResponse = UsersPublic

export type UsersCreateUserData = {
  requestBody: UserCreate
}

export type UsersCreateUserResponse = UserPublic

export type UsersReadUserMeResponse = UserPublic

export type UsersDeleteUserMeResponse = Message

export type UsersUpdateUserMeData = {
  requestBody: UserUpdateMe
}

export type UsersUpdateUserMeResponse = UserPublic

export type UsersUpdatePasswordMeData = {
  requestBody: UpdatePassword
}

export type UsersUpdatePasswordMeResponse = Message

export type UsersRegisterUserData = {
  requestBody: UserRegister
}

export type UsersRegisterUserResponse = UserPublic

export type UsersReadUserByIdData = {
  userId: string
}

export type UsersReadUserByIdResponse = UserPublic

export type UsersUpdateUserData = {
  requestBody: UserUpdate
  userId: string
}

export type UsersUpdateUserResponse = UserPublic

export type UsersDeleteUserData = {
  userId: string
}

export type UsersDeleteUserResponse = Message

export type UtilsTestEmailData = {
  emailTo: string
}

export type UtilsTestEmailResponse = Message

export type UtilsHealthCheckResponse = boolean
